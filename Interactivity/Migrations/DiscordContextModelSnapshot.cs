// <auto-generated />
using System;
using Interactivity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Interactivity.Migrations
{
    [DbContext(typeof(DiscordContext))]
    partial class DiscordContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("Interactivity.Data.EmberGuild", b =>
                {
                    b.Property<ulong>("GuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("AuditChannel")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("LogChannel")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("ModRole")
                        .HasColumnType("INTEGER");

                    b.Property<ulong?>("MutedRole")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("**unknown**");

                    b.HasKey("GuildId");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("Interactivity.Data.EmberMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("DiscordId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModeratorsNote")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GuildId", "DiscordId")
                        .IsUnique();

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Interactivity.Data.EmberSanction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ById")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Inserted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTime(2022, 8, 7, 12, 20, 18, 234, DateTimeKind.Local).AddTicks(8485));

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ById");

                    b.HasIndex("ReceiverId");

                    b.ToTable("Sanctions");
                });

            modelBuilder.Entity("Interactivity.Data.EmberMember", b =>
                {
                    b.HasOne("Interactivity.Data.EmberGuild", "Guild")
                        .WithMany("Members")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("Interactivity.Data.EmberSanction", b =>
                {
                    b.HasOne("Interactivity.Data.EmberMember", "By")
                        .WithMany("IssuedSanctions")
                        .HasForeignKey("ById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Interactivity.Data.EmberMember", "Receiver")
                        .WithMany("ReceivedSanctions")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("By");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("Interactivity.Data.EmberGuild", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Interactivity.Data.EmberMember", b =>
                {
                    b.Navigation("IssuedSanctions");

                    b.Navigation("ReceivedSanctions");
                });
#pragma warning restore 612, 618
        }
    }
}
